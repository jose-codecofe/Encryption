<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>